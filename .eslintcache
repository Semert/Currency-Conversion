[{"C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\CurrencyRow.js":"3","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\Conversion.js":"4","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\ConversionRows.js":"5","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\deneme.js":"6","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\Deneme.js":"7"},{"size":219,"mtime":1607354649201,"results":"8","hashOfConfig":"9"},{"size":1723,"mtime":1607436125101,"results":"10","hashOfConfig":"9"},{"size":938,"mtime":1607434121830,"results":"11","hashOfConfig":"9"},{"size":2466,"mtime":1607437442046,"results":"12","hashOfConfig":"9"},{"size":1024,"mtime":1607437081481,"results":"13","hashOfConfig":"9"},{"size":670,"mtime":1607422820126,"results":"14","hashOfConfig":"9"},{"size":682,"mtime":1607433644334,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8ubs62",{"filePath":"19","messages":"20","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\index.js",[],["34","35"],"C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\App.js",["36","37","38","39","40","41","42","43","44","45","46"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap/\";\nimport CurrencyRow from \"./components/CurrencyRow\";\nimport Conversion from \"./components/Conversion\";\nimport Deneme from \"./components/Deneme\";\n\nfunction App() {\n  const [currency, setCurrency] = useState([{ id: \"\", amount: \"\" }]);\n  const [base, setBase] = useState();\n  const [date, setDate] = useState();\n  console.log(\"curency\", currency);\n\n  useEffect(() => {\n    const fetctData = async () => {\n      const { data } = await axios.get(\"https://api.ratesapi.io/api/latest\");\n      const { GBP, USD, TRY, JPY, DKK, NOK } = data.rates;\n      console.log(data.rates);\n      // { gbp: [GBP, \"GBP\"], usd: [USD, \"USD\"], try: TRY, jpy: JPY, dkk: DKK, nok: NOK },\n\n      setCurrency([...currency, { id: \"GBP\", amount: GBP }]);\n      setDate(data.date);\n      setBase(data.base);\n    };\n\n    fetctData();\n  }, []);\n  return (\n    <div className=\"pt-5 pr-5 pl-5\">\n      <Row>\n        <Col lg className=\"m-2 column\">\n          {/* {currency?.map((cur, index) =>\n            // <CurrencyRow key={index} name={cur} amount={cur[1]} />\n            console.log(cur)\n          )} */}\n\n          {currency?.map((cur) => console.log(\"sa\", cur.GBP))}\n\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button className=\"button\">Detaylı Bilgi</Button>\n          </div>\n        </Col>\n\n        <Col lg className=\"m-2\">\n          2 of 3\n        </Col>\n\n        <Col lg className=\"m-2\">\n          <Conversion />\n          <Deneme />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\CurrencyRow.js",["47","48","49"],"import React, { useState } from \"react\";\r\nimport { Card } from \"react-bootstrap/\";\r\nimport usa from \"../usa.png\";\r\nimport \"./CurrencyRow.css\";\r\n\r\nconst CurrencyRow = ({ name, amount }) => {\r\n  console.log(\"aaaaaaaa\", name, amount);\r\n  return (\r\n    <div className=\"main\">\r\n      <div style={{ display: \"flex\" }}>\r\n        <img className=\"image\" src={usa} />{\" \"}\r\n        <div>\r\n          <div>\r\n            <b> {name}</b>\r\n          </div>\r\n          <div>Amerika Doları</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div style={{ textAlign: \"end\", color: \"grey\", marginRight: 3 }}>\r\n          ALIŞ\r\n        </div>\r\n        <div style={{ fontSize: 16, marginRight: 3 }}>{amount}</div>\r\n      </div>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <div style={{ textAlign: \"end\", color: \"grey\" }}> SATIŞ</div>\r\n        <div style={{ fontSize: 16 }}>6.3848</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyRow;\r\n","C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\Conversion.js",[],"C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\ConversionRows.js",["50"],"C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\deneme.js",["51","52","53","54"],"C:\\Users\\pc\\Desktop\\React\\Mert-Currency\\currency-conversion\\src\\components\\Deneme.js",["55","56","57","58","59","60"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Deneme = () => {\r\n  const [result, setResult] = useState();\r\n  const [base, setBase] = useState(\"EUR\");\r\n  const [convertTo, setConvertTo] = useState(\"TRY\");\r\n  const [date, setDate] = useState();\r\n  const [amount, setAmount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.exchangeratesapi.io/latest?base=${base}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const date = data.date;\r\n        const result = (data.rates[convertTo] * amount).toFixed(4);\r\n        setResult(result);\r\n        setDate(date);\r\n      });\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default Deneme;\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":19},{"ruleId":"65","severity":1,"message":"69","line":5,"column":31,"nodeType":"67","messageId":"68","endLine":5,"endColumn":35},{"ruleId":"65","severity":1,"message":"70","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":19},{"ruleId":"65","severity":1,"message":"71","line":12,"column":10,"nodeType":"67","messageId":"68","endLine":12,"endColumn":14},{"ruleId":"65","severity":1,"message":"72","line":13,"column":10,"nodeType":"67","messageId":"68","endLine":13,"endColumn":14},{"ruleId":"65","severity":1,"message":"73","line":19,"column":20,"nodeType":"67","messageId":"68","endLine":19,"endColumn":23},{"ruleId":"65","severity":1,"message":"74","line":19,"column":25,"nodeType":"67","messageId":"68","endLine":19,"endColumn":28},{"ruleId":"65","severity":1,"message":"75","line":19,"column":30,"nodeType":"67","messageId":"68","endLine":19,"endColumn":33},{"ruleId":"65","severity":1,"message":"76","line":19,"column":35,"nodeType":"67","messageId":"68","endLine":19,"endColumn":38},{"ruleId":"65","severity":1,"message":"77","line":19,"column":40,"nodeType":"67","messageId":"68","endLine":19,"endColumn":43},{"ruleId":"78","severity":1,"message":"79","line":29,"column":6,"nodeType":"80","endLine":29,"endColumn":8,"suggestions":"81"},{"ruleId":"65","severity":1,"message":"82","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":11,"column":9,"nodeType":"85","endLine":11,"endColumn":44},{"ruleId":"65","severity":1,"message":"86","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":20},{"ruleId":"65","severity":1,"message":"87","line":5,"column":16,"nodeType":"67","messageId":"68","endLine":5,"endColumn":23},{"ruleId":"65","severity":1,"message":"88","line":6,"column":21,"nodeType":"67","messageId":"68","endLine":6,"endColumn":33},{"ruleId":"89","severity":2,"message":"90","line":16,"column":49,"nodeType":"67","messageId":"91","endLine":16,"endColumn":55},{"ruleId":"78","severity":1,"message":"92","line":20,"column":6,"nodeType":"80","endLine":20,"endColumn":8,"suggestions":"93"},{"ruleId":"65","severity":1,"message":"94","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":16},{"ruleId":"65","severity":1,"message":"87","line":5,"column":16,"nodeType":"67","messageId":"68","endLine":5,"endColumn":23},{"ruleId":"65","severity":1,"message":"88","line":6,"column":21,"nodeType":"67","messageId":"68","endLine":6,"endColumn":33},{"ruleId":"65","severity":1,"message":"72","line":7,"column":10,"nodeType":"67","messageId":"68","endLine":7,"endColumn":14},{"ruleId":"65","severity":1,"message":"95","line":8,"column":18,"nodeType":"67","messageId":"68","endLine":8,"endColumn":27},{"ruleId":"78","severity":1,"message":"96","line":19,"column":6,"nodeType":"80","endLine":19,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CurrencyRow' is defined but never used.","'base' is assigned a value but never used.","'date' is assigned a value but never used.","'USD' is assigned a value but never used.","'TRY' is assigned a value but never used.","'JPY' is assigned a value but never used.","'DKK' is assigned a value but never used.","'NOK' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currency'. Either include it or remove the dependency array. You can also do a functional update 'setCurrency(c => ...)' if you only need 'currency' in the 'setCurrency' call.","ArrayExpression",["100"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MdSwapVert' is defined but never used.","'setBase' is assigned a value but never used.","'setConvertTo' is assigned a value but never used.","no-undef","'amount' is not defined.","undef","React Hook useEffect has missing dependencies: 'base' and 'convertTo'. Either include them or remove the dependency array.",["101"],"'result' is assigned a value but never used.","'setAmount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'amount', 'base', and 'convertTo'. Either include them or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [currency]",{"range":"109","text":"110"},"Update the dependencies array to be: [base, convertTo]",{"range":"111","text":"112"},"Update the dependencies array to be: [amount, base, convertTo]",{"range":"113","text":"114"},[1014,1016],"[currency]",[609,611],"[base, convertTo]",[621,623],"[amount, base, convertTo]"]